7.3
import java.util.Scanner;
import java.util.Collections;
import java.util.ArrayList;
public class NumberTime {

	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
		ArrayList<Integer> list=new ArrayList<>();
		while(true) {
			int m=input.nextInt();
			if(m==0)
				break;
			list.add(m);
		}
		Collections.sort(list);
		int max=Collections.max(list);
		int[] count=new int[101];
		for(int number:list) {
			count[number]++;
		}
		for(int i=0;i<=max;i++) {
			if(count[i]!=0)
				System.out.println(i+" occurs "+count[i]+" times");
		}
	}

}


7.5
import java.util.Scanner;
import java.util.ArrayList;

public class Number {

	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
		ArrayList<Integer> number=new ArrayList<>();
		int[] array=new int[10];
		System.out.print("Enter ten numbers: ");
		for(int i=0;i<10;i++) {
			int temp=input.nextInt();
			if(!number.contains(temp))
			number.add(temp);
		}
		System.out.println("The number of distinct number is "+number.size());
		System.out.print("The distinct numbers are ");
		for(int i=0;i<number.size();i++) {
			System.out.print(number.get(i)+" ");
		}
	}

}


7.17
import java.util.Scanner;
import java.util.Collections;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Iterator;
public class StudentSort {

	public static void main(String[] args) {
	Scanner input=new Scanner(System.in);
	ArrayList<Student> student=new ArrayList<Student>();
	System.out.print("Enter the number of students: ");
	int n=input.nextInt();
	for(int i=0;i<n;i++) {
		System.out.print("Enter the student's name: ");
		String name=input.next();
		System.out.print("Enter the student's score: ");
		int score=input.nextInt();
		Student s=new Student();
		s.setname(name);
		s.setscore(score);
		student.add(s);
	}
	Collections.sort(student,new ScoreComparator());
	for(int i=0;i<student.size();i++) {
		Student s=student.get(i);
		System.out.println(s.getname()+"\t"+s.getscore());
	}
	//myprint(student);
	}
	static class ScoreComparator implements Comparator{
		public int compare(Object object1,Object object2) {
			Student s1=(Student)object1;
			Student s2=(Student)object2;
			return new Integer(s2.getscore()).compareTo(new Integer(s1.getscore()));
		}
	}
	
	public  static void myprint(ArrayList<Student> student) {
		Iterator it=student.iterator();
		while(it.hasNext()) {
			System.out.println("\t"+it.next());
		}
	}
}


public class Student {
	private String name;
	private int score;

public Student(){
	}
public Student(String name,int score) {
	this.name=name;
	this.score=score;
}

public String getname() {
	return name;
}
public void setname(String name) {
	this.name=name;
}

public int getscore() {
	return score;
}
public void setscore(int score) {
	this.score=score;
}

public int compareTo(Object obj) {
	Student s=(Student)obj;
	return this.score-s.score;
}
}


7.18
import java.util.Scanner;

public class BubbleSort {

	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
		double[] num=new double[10];
		for(int i=0;i<10;i++) {
			num[i]=input.nextDouble();
		}
		for(int i=0;i<9;i++) {
			for(int j=0;j<9;j++) {
				if(num[j]<num[j+1]) {
					double temp=num[j];
					num[j]=num[j+1];
					num[j+1]=temp;
				}
			}
		}
		for(int i=0;i<9;i++) {
			System.out.print(num[i]+" ");
		}
	}

}


7.19import java.util.Scanner;

public class TextList {

	public static void main(String[] args) {
				Scanner input=new Scanner(System.in);
				int n=input.nextInt();
				int[] num=new int[n];
				int[] text=new int[n];
				for(int i=0;i<n;i++) {
					num[i]=input.nextInt();
					text[i]=num[i];
				}
				for(int i=0;i<n-1;i++) {
					for(int j=0;j<n-1;j++) {
						if(text[j]>text[j+1]) {
							int temp=text[j];
							text[j]=text[j+1];
							text[j+1]=temp;
						}
					}
				}
				int flag=1;
				for(int i=0;i<n;i++) {
					if(num[i]!=text[i]) {
					flag=0;
					break;
				}
				}
					if(flag==1)
						System.out.println("The list is already sorted ");
					else
					System.out.println("The list is not sorted ");
			}
}


